import java.text.SimpleDateFormat

plugins {
    id "java"
    id "idea"
    id "eclipse"
    id "maven-publish"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

apply plugin: 'maven'

group "io.th0rgal"
def pluginVersion = "1.74.0"
version = pluginVersion

repositories {
    mavenCentral()
    mavenLocal()
    //Spigot
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    //Because Spigot depends on Bungeecord ChatComponent-API
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    //JitPack
    maven { url 'https://jitpack.io' }
    //ProtocolLib
    maven { url "https://repo.dmulloy2.net/nexus/repository/public/" }
    //Minecraft repo (commodore)
    maven { url "https://libraries.minecraft.net/" }
    //MythicMobs
    maven { url "https://mvn.lumine.io/repository/maven-public/" }
    //PlaceHolderAPI
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    //EffectLib
    maven { url 'https://maven.elmakers.com/repository/' }
    //sk89q-repo
    maven { url 'https://maven.enginehub.org/repo/' }
    //CodeMc (bstats)
    maven { url "https://repo.codemc.org/repository/maven-public" }
    jcenter() // needed for building shadow from protocolLib 4.5.0
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.encoding = "UTF-8"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

dependencies {
    // The Spigot API with no shadowing. Requires the OSS repo.
    compileOnly group: "org.spigotmc", name: "spigot", version: "1.16.4-R0.1-SNAPSHOT"
    compileOnly group: "org.spigotmc", name: "spigot-api", version: "1.16.5-R0.1-SNAPSHOT"
    compileOnly group: "com.github.dmulloy2", name: "ProtocolLib", version: "4.5.1"
    compileOnly group: "io.lumine.xikage", name: "MythicMobs", version: "4.11.2"
    compileOnly group: "com.github.Hazebyte", name: "CrateReloadedAPI", version: "5318abfccc"
    compileOnly group: "com.sk89q.worldguard", name: "worldguard-bukkit", version: "7.0.4"
    compileOnly group: "com.github.jojodmo", name: "ItemBridge", version: "-SNAPSHOT"
    compileOnly fileTree(dir: "libs/compile", include: ["*.jar"])
    implementation fileTree(dir: "libs/implement", include: ["*.jar"])
    implementation group: 'com.github.rockswang', name: 'java-curl', version: '1.2.2.2'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.28'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'reflection', version: '2.0.9'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'version', version: '2.0.4'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'nbt', version: '2.0.5'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'config-base', version: '2.0.4'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'alias', version: '2.0.4'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'logging', version: '2.0.4'
    implementation group: 'com.syntaxphoenix.syntaxapi', name: 'exception', version: '2.0.4'
}

processResources {
    filesNotMatching(["**/*.png", "**/models/**", "**/textures/**"]) {
        expand projectVersion: pluginVersion
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    relocate "org.bstats.bukkit", "io.th0rgal.oraxen.shaded.bstats"
    relocate "com.syntaxphoenix.syntaxapi", "io.th0rgal.oraxen.shaded.syntaxapi"
    relocate "org.yaml.snakeyaml", "io.th0rgal.oraxen.shaded.snakeyaml"
    minimize {
        exclude("io.th0rgal.oraxen.api.*")
        exclude("com.syntaxphoenix.syntaxapi.*")
    }

    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Version': pluginVersion,
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd' 'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

compileJava.dependsOn clean
build.dependsOn shadowJar
